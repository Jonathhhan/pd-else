#N canvas 461 52 561 497 10;
#X obj 5 287 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 5 360 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 5 422 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 5 466 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X obj 306 5 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 305 4 pd;
#X obj 346 12 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 459 12 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 479 12 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 516 12 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 465 27 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 503 27 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 320 152 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X obj 19 42 cnv 4 4 4 empty empty Resonant\ complex\ one\ pole\ filter 0 28 2 18 #e0e0e0 #000000 0;
#X obj 4 4 cnv 15 301 42 empty empty cpole2~ 20 20 2 37 #e0e0e0 #000000 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1 0 0;
#X restore 3 4 graph;
#X obj 128 369 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 128 294 cnv 17 3 17 empty empty 0 5 9 0 16 #dcdcdc #9c9c9c 0;
#X obj 128 315 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 188 369 signal;
#X text 147 445 2) float - decay time in ms (default 0);
#X obj 128 336 cnv 17 3 17 empty empty 2 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 152 316 float/signal;
#X obj 214 218 else/out~;
#X text 152 339 float/signal;
#X text 188 295 signal;
#X text 147 430 1) float - frequency (default 0);
#X obj 128 395 cnv 17 3 17 empty empty 1 5 9 0 16 #dcdcdc #9c9c9c 0;
#X text 188 396 signal;
#X text 49 91 [cpole2~] is a wrap around [cpole~] \, so it's less raw. It only takes a real signal input and takes a resonant frequency and a decay time., f 63;
#X obj 261 151 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #dcdcdc #000000 #000000 0 256;
#X text 331 134 t60;
#X text 262 134 freq;
#X text 235 295 - filter input;
#X text 234 316 - resonant frequency in hertz;
#X text 234 339 - t60 decay time in ms (resonance);
#X obj 203 139 noise~;
#X obj 203 179 else/cpole2~ 500 100;
#N canvas 646 183 348 420 details 0;
#X text 103 116 trigger;
#X obj 72 149 else/impseq~;
#X obj 72 111 bng 25 250 50 0 empty empty empty 0 -8 0 10 #dfdfdf #000000 #000000;
#X obj 72 212 else/s2f~;
#X obj 72 243 vsl 16 136 -1 1 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 183 212 else/s2f~;
#X obj 183 243 vsl 16 136 -1 1 0 0 empty empty empty 0 -9 0 10 #dfdfdf #000000 #000000 0 1;
#X obj 72 181 else/cpole2~ 1 5000;
#X text 32 34 This example shows thw difference between both outputs. By feeding an impulse you get an oscillation on the left outlet starts at cosine initial phase \, while right one starts at sine., f 41;
#X connect 1 0 7 0;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 5 0 6 0;
#X connect 7 0 3 0;
#X connect 7 1 5 0;
#X restore 469 250 pd details;
#X obj 33 246 vcf~;
#X text 34 203 see also:;
#X obj 33 224 else/damp.osc~;
#X obj 81 246 cpole~;
#X text 234 369 - real part of the filter;
#X text 234 396 - imaginary part of the filter;
#X connect 12 0 37 2;
#X connect 30 0 37 1;
#X connect 36 0 37 0;
#X connect 37 0 23 0;
#X connect 37 1 23 1;
