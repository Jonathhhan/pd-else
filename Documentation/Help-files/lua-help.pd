#N canvas 421 35 572 488 10;
#X obj 6 346 cnv 3 550 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 381 cnv 3 550 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 416 cnv 3 550 3 empty empty arguments 8 12 0 13 #dcdcdc #000000 0;
#X obj 6 449 cnv 15 552 21 empty empty empty 20 12 0 14 #e0e0e0 #202020 0;
#X text 245 391 NONE;
#X text 245 426 NONE;
#X obj 4 5 cnv 15 301 42 empty empty lua 20 20 2 37 #e0e0e0 #000000 0;
#X obj 307 6 cnv 15 250 40 empty empty empty 12 13 0 18 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 302 42 1;
#X restore 3 5 graph;
#X obj 346 13 cnv 10 10 10 empty empty ELSE 0 15 2 30 #7c7c7c #e0e4dc 0;
#X obj 24 42 cnv 4 4 4 empty empty Load\ lua\ scripts 0 28 2 18 #e0e0e0 #000000 0;
#X obj 459 13 cnv 10 10 10 empty empty EL 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 479 13 cnv 10 10 10 empty empty Locus 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 516 13 cnv 10 10 10 empty empty Solus' 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 465 28 cnv 10 10 10 empty empty ELSE 0 6 2 13 #7c7c7c #e0e4dc 0;
#X obj 503 28 cnv 10 10 10 empty empty library 0 6 2 13 #7c7c7c #e0e4dc 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 252 42 1 0 0;
#X restore 306 5 graph;
#X text 245 361 NONE;
#X text 34 202 The [lua] object allows inline scripting in Lua and is one example of an object that is coded in lua. It is still an experimental object though that is not really functional and ready yet. Stay tuned!, f 80;
#X text 80 292 About loading objects in lua and other details -->;
#N canvas 582 226 575 195 +info 0;
#X text 220 137 <- right click for help or open, f 32;
#X obj 180 138 hello;
#X text 44 18 ELSE distributes a modified version of [pdlua] \, but discards the actual [pdlua] and [pdluax] objects. You can then consult the original documentation of [pdlua] for detals on how to code objects in lua \, which should be the same \, but discard the information on how to use [pdlua] and [pdluax]., f 80;
#X text 44 74 The [hello] object below is a minimal example. Note you can also provide help files for your object and right click on it to ask for them. Right click also allows you to open the .pd_lua file if your system has a known application for it., f 80;
#X restore 393 293 pd +info;
#X text 32 100 When you load 'ELSE' via startup or [declare] \, it registers a loader that allows Pd externals written in Lua (with the "*.pd_lua" extension) to be loaded. One such object provided in ELSE is the lua object that allows you to load scripts into an object., f 80;
#X text 303 154 see also:;
#X obj 367 155 else;
#X obj 344 238 lua;
